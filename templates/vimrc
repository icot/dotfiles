set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'Shougo/neocomplete'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdtree'
Plugin 'plasticboy/vim-markdown'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'altercation/vim-colors-solarized'
Plugin 'godlygeek/tabular'
Plugin 'rodjek/vim-puppet'
Plugin 'majutsushi/tagbar'
Plugin 'jpalardy/vim-slime'
Plugin 'ryanoasis/vim-devicons'
call vundle#end()
" End on Bundle config
syntax on
filetype plugin indent on
set encoding=utf8
let g:airline_powerline_fonts = 1

set nofoldenable

let g:slime_target = "tmux"
"let g:slime_default_config = {"socket_name": "default", "target_pane": "1"}
"let g:slime_dont_ask_default = 1
let g:slime_python_ipython = 1

set t_Co=256
set background=dark
set guioptions=i
let g:solarized_termtrans=1
if has("gui_running")
    colorscheme solarized
    "set guifont="Inconsolata\ For\ Powerline\ Medium\ 13"
    set guifont=Monoisome\ Semi-Condensed\ 10
    let g:airline_theme='solarized'
else
    let g:airline_theme='aurora'
    colorscheme solarized
    :hi normal ctermbg=None
endif

set autoindent

" Python
set ts=4
set shiftwidth=4
set expandtab

autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
autocmd BufWritePre *.py normal m`:%s/\s\+$//e ``

function! Mosh_Tab_Or_Complete()
    if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '^\w'
        return "\<C-N>"
    else
        return "\<Tab>"
endfunction

:inoremap <Tab> <C-R>=Mosh_Tab_Or_Complete()<CR>
:nnoremap <C-p> :tabprevious<CR>
:nnoremap <C-n> :tabnext<CR>
:nnoremap <C-h> <C-w>h
:nnoremap <C-j> <C-w>j
:nnoremap <C-k> <C-w>k
:nnoremap <C-l> <C-w>l

" Tagbar
:nmap <F8> :TagbarToggle<CR>
let g:tagbar_compact=1

:map <C-t> :NERDTreeToggle<CR>

" Highlight parts of lines longer than 79 columns
au filetype * highlight OverLength ctermbg=darkgreen ctermfg=white guibg=black
au filetype * match OverLength /\%80v.\+/
au BufNewFile,BufRead *.pp setf puppet

" Autosave
:au FocusLost * silent! wa

" Airline
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
"let g:airline_extensions_tabline_enabled = 0
"let g:airline#extensions#tabline#show_tab_nr = 0
"let g:airline#extensions#tabline#show_tab_type = 0
"let g:airline#extensions#tabline#left_sep = '▶'
"let g:airline#extensions#tabline#right_sep = '◀'
"let g:airline_left_sep = '▶'
"let g:airline_right_sep = '◀'
set laststatus=2

"" Syntastic
map <silent> <Leader>e :Errors<CR>
map <Leader>s :SyntasticToggleMode<CR>
let g:syntastic_auto_loc_list=0

"" Trying to fix Slow start for YouCompleteMe
let g:ycm_register_as_syntastic_checker = 0

" Fugitive
nnoremap <space>ga :Git add %:p<CR><CR>
nnoremap <space>gs :Gstatus<CR>
nnoremap <space>gc :Gcommit -v -q<CR>
nnoremap <space>gt :Gcommit -v -q %:p<CR>
nnoremap <space>gd :Gdiff<CR>
nnoremap <space>ge :Gedit<CR>
nnoremap <space>gr :Gread<CR>
nnoremap <space>gw :Gwrite<CR><CR>
nnoremap <space>gl :silent! Glog<CR>:bot copen<CR>
nnoremap <space>gp :Ggrep<Space>
nnoremap <space>gm :Gmove<Space>
nnoremap <space>gb :Git branch<Space>
nnoremap <space>go :Git checkout<Space>
nnoremap <space>gps :Dispatch! git push<CR>
nnoremap <space>gpl :Dispatch! git pull<CR>
xnoremap dp :diffput<cr>
xnoremap do :diffget<cr>

let g:ycm_server_python_interpreter = "/usr/bin/python"
